apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:latest.release'
    implementation 'com.google.android.material:material:latest.release'
    //implementation 'android.lib.snackbar:Snackbar:latest.release'
}

//删除之前打出的包，默认将包打在'build/libs/'下
task deleteOldJar(type: Delete){
    delete 'build/libs/baselib.jar'
}
//把纯粹Java代码打包成Jar以供Java项目使用
task makeJar(type: Jar){
    //要打成的包的名字
    baseName 'baselib'
    //选取要打包的文件夹
    from('build/intermediates/javac/debug/classes/com/app/')
    //需要跟实际类的包名路径一样
    into('com/app/')
    //排除在外的文件
    exclude('BuildConfig.class')
    //排除以R$开头的文件
    exclude{ it.name.startsWith('R$')}
    exclude{ it.name.startsWith('AndroidSchedulers')}
}
//打包~
makeJar.dependsOn(deleteOldJar, build)